jobs:
  issue:
    if: contains(github.event.issue.labels.*.name, 'FP Report')
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      if: contains(github.event.issue.labels.*.name, 'pending more information')
      name: Remove Labels
      uses: actions/github-script@v7.0.1
      with:
        script: "github.rest.issues.removeLabel({\n  issue_number: context.issue.number,\n\
          \  owner: context.repo.owner,\n  repo: context.repo.repo,\n  name: 'pending\
          \ more information'\n})\nconsole.log(\nawait github.rest.issues.listLabelsOnIssue\n\
          ({\n  issue_number: context.issue.number,\n  owner: context.repo.owner,\n\
          \  repo: context.repo.repo\n})\n)\n"
    - continue-on-error: true
      uses: actions/checkout@v4
      with:
        path: odc
    - continue-on-error: true
      id: issue-parser
      name: Parse False Positive Issue
      uses: stefanbuck/github-issue-parser@v3
      with:
        issue-body: ${{ github.event.issue.body }}
        template-path: odc/.github/ISSUE_TEMPLATE/false-positive-report.yml
    - continue-on-error: true
      uses: actions/setup-node@v4.0.2
      with:
        node-version: 14
    - continue-on-error: true
      name: Initialize npm
      run: 'npm init -y

        npm install packageurl-js

        '
    - continue-on-error: true
      env:
        PURL: ${{ fromJSON(steps.issue-parser.outputs.jsonString).purl }}
      id: purl-parser
      name: Parse Package URL
      uses: actions/github-script@v7.0.1
      with:
        script: "try {\n    const { PackageURL } = require('packageurl-js');\n   \
          \ const pkg = PackageURL.fromString(process.env.PURL.trim().replaceAll(/^`|`$/g,''));\n\
          \    console.log(pkg);\n    return pkg;\n} catch (ex) {\n  console.log(ex);\n\
          \  await github.rest.issues.createComment({\n    issue_number: context.issue.number,\n\
          \    owner: context.repo.owner,\n    repo: context.repo.repo,\n    body:\
          \ 'Error parsing package url: ' + process.env.PURL + '.\\n\\nError: ' +\
          \ ex + '\\n\\nPlease correct the package URL - consider copying the package\
          \ url from the HTML report.'\n  })\n  github.rest.issues.addLabels({\n \
          \   issue_number: context.issue.number,\n    owner: context.repo.owner,\n\
          \    repo: context.repo.repo,\n    labels: ['pending more information']\n\
          \  })\n  throw new Error('Invalid package url');\n}\n"
    - continue-on-error: true
      env:
        ARTIFACTID: ${{ fromJSON(steps.purl-parser.outputs.result).name }}
        GROUPID: ${{ fromJSON(steps.purl-parser.outputs.result).namespace }}
        VERSION: ${{ fromJSON(steps.purl-parser.outputs.result).version }}
      if: ${{ fromJSON(steps.purl-parser.outputs.result).type == 'maven' }}
      name: Setup maven fp-project
      run: "ver=$(curl -s https://jeremylong.github.io/DependencyCheck/current.txt)\n\
        mkdir ./fp-project\ncp ${{github.workspace}}/odc/.github/workflows/files/maven-pom.start\
        \ ./fp-project/pom.xml\necho -n $ver >> ./fp-project/pom.xml\ncat ${{github.workspace}}/odc/.github/workflows/files/maven-pom.middle\
        \ >> ./fp-project/pom.xml\necho \"<dependency>\" >> ./fp-project/pom.xml\n\
        echo \"   <groupId>$GROUPID</groupId>\" >> ./fp-project/pom.xml\necho \" \
        \  <artifactId>$ARTIFACTID</artifactId>\" >> ./fp-project/pom.xml\necho \"\
        \   <version>$VERSION</version>\" >> ./fp-project/pom.xml\necho \"</dependency>\"\
        \ >> ./fp-project/pom.xml\ncat ${{github.workspace}}/odc/.github/workflows/files/maven-pom.end\
        \ >> ./fp-project/pom.xml\ncd ./fp-project\n## not ideal as verify would be\
        \ better then using the docker image...\n##mvn verify\nmvn dependency:copy-dependencies\
        \ --no-transfer-progress --batch-mode \ncd ..\n"
    - continue-on-error: true
      env:
        PACKAGE: ${{ fromJSON(steps.purl-parser.outputs.result).name }}@${{ fromJSON(steps.purl-parser.outputs.result).version
          }}
      if: ${{ fromJSON(steps.purl-parser.outputs.result).type == 'npm' }}
      name: Setup npm fp-project
      run: 'mkdir ./fp-project

        cd ./fp-project

        npm init -y

        npm install "$PACKAGE"

        cd ..

        '
    - continue-on-error: true
      if: ${{ fromJSON(steps.purl-parser.outputs.result).type == 'nuget' }}
      name: Setup dotnet
      uses: actions/setup-dotnet@v4.0.0
      with:
        dotnet-version: 6.0.x
    - continue-on-error: true
      env:
        PACKAGE: ${{ fromJSON(steps.purl-parser.outputs.result).name }}
        VERSION: ${{ fromJSON(steps.purl-parser.outputs.result).version }}
      if: ${{ fromJSON(steps.purl-parser.outputs.result).type == 'nuget' }}
      name: Setup dotnet fp-project
      run: "dotnet new classlib --language C# --name fp-project --no-update-check\
        \ \ncd fp-project\ndotnet add package \"$PACKAGE\" --version \"$VERSION\"\n\
        dotnet publish\ncd ..\n"
    - continue-on-error: true
      id: check_files
      name: Check for setup complete
      uses: andstor/file-existence-action@v3
      with:
        files: ./fp-project
    - continue-on-error: true
      if: steps.check_files.outputs.files_exists == 'true'
      name: Run ODC
      uses: dependency-check/Dependency-Check_Action@main
      with:
        args: '--failOnCVSS 11 --enableExperimental

          '
        format: HTML
        path: ./fp-project
        project: fp-test
    - continue-on-error: true
      if: steps.check_files.outputs.files_exists == 'true'
      name: Upload FP Report
      uses: actions/upload-artifact@v4
      with:
        name: FP Report
        path: ${{github.workspace}}/reports
    - continue-on-error: true
      env:
        ARTIFACTID: ${{ fromJSON(steps.purl-parser.outputs.result).name }}
        CPE: ${{ fromJSON(steps.issue-parser.outputs.jsonString).cpe }}
        GROUPID: ${{ fromJSON(steps.purl-parser.outputs.result).namespace }}
        TYPE: ${{ fromJSON(steps.purl-parser.outputs.result).type }}
        VERSION: ${{ fromJSON(steps.purl-parser.outputs.result).version }}
      if: ${{ fromJSON(steps.purl-parser.outputs.result).type == 'maven' }}
      name: Comment on maven issue
      uses: actions/github-script@v7.0.1
      with:
        script: "var namespace = process.env.GROUPID;\nvar name = process.env.ARTIFACTID;\n\
          var packageType = process.env.TYPE;\nvar purl = '^pkg:' + packageType;\n\
          if(namespace !== null && namespace !== '') {\n    purl += '/' + namespace.replaceAll('.','\\\
          \\.');\n}\nif(name !== null && name !== '') {\n    purl += '/' + name.replaceAll('.','\\\
          \\.');\n}\npurl += '@.*$';\nvar cpe = process.env.CPE.trim().replaceAll(/^`|`$/g,'').split(':');\n\
          var matchCpe;\nif (cpe[1] == '2.3') {\n   matchcpe = 'cpe:/a:' + cpe[3]\
          \ + ':' + cpe[4];\n} else {\n   matchcpe = 'cpe:/a:' + cpe[2] + ':' + cpe[3];\n\
          }\n\nawait github.rest.issues.createComment({\n  issue_number: context.issue.number,\n\
          \  owner: context.repo.owner,\n  repo: context.repo.repo,\n  body: 'Maven\
          \ Coordinates\\n\\n```xml\\n<dependency>\\n   <groupId>' + process.env.GROUPID\
          \ + '</groupId>\\n   <artifactId>' + process.env.ARTIFACTID + '</artifactId>\\\
          n   <version>' + process.env.VERSION + '</version>\\n</dependency>\\n```\\\
          n\\n' +\n        'Suppression rule:\\n```xml\\n' +\n        '<suppress base=\"\
          true\">\\n' +\n        '   <notes><![CDATA[\\n' +\n        '   FP per issue\
          \ #' + context.issue.number + '\\n' +\n        '   ]]></notes>\\n' +\n \
          \       '   <packageUrl regex=\"true\">' + purl + '</packageUrl>\\n' +\n\
          \        '   <cpe>' + matchcpe + '</cpe>\\n' +\n        '</suppress>\\n```\\\
          n\\n' +\n        'Link to test results: ' + context.serverUrl + '/' + context.repo.owner\
          \ + '/' + context.repo.repo + '/actions/runs/' + context.runId\n})\ngithub.rest.issues.addLabels({\n\
          \  issue_number: context.issue.number,\n  owner: context.repo.owner,\n \
          \ repo: context.repo.repo,\n  labels: ['maven']\n})\n"
    - continue-on-error: true
      env:
        CPE: ${{ fromJSON(steps.issue-parser.outputs.jsonString).cpe }}
        NAME: ${{ fromJSON(steps.purl-parser.outputs.result).name }}
        TYPE: ${{ fromJSON(steps.purl-parser.outputs.result).type }}
        VERSION: ${{ fromJSON(steps.purl-parser.outputs.result).version }}
      if: ${{ fromJSON(steps.purl-parser.outputs.result).type == 'npm' }}
      name: Comment on npm issue
      uses: actions/github-script@v7.0.1
      with:
        script: "var name = process.env.NAME;\nvar packageType = process.env.TYPE;\n\
          var purl = '^pkg:' + packageType;\nif(name !== null && name !== '') {\n\
          \    purl += '/' + name.replaceAll('.','\\\\.');\n}\npurl += '@.*$';\nvar\
          \ cpe = process.env.CPE.trim().replaceAll(/^`|`$/g,'').split(':');\nconsole.log(cpe);\n\
          var matchCpe;\nif (cpe[1] == '2.3') {\n   matchcpe = 'cpe:/a:' + cpe[3]\
          \ + ':' + cpe[4];\n} else {\n   matchcpe = 'cpe:/a:' + cpe[2] + ':' + cpe[3];\n\
          }\n\nawait github.rest.issues.createComment({\n  issue_number: context.issue.number,\n\
          \  owner: context.repo.owner,\n  repo: context.repo.repo,\n  body: 'Npm\
          \ Coordinates\\n\\n```shell\\nnpm -i ' + process.env.NAME + '@' + process.env.VERSION\
          \ + '\\n```\\n\\n' +\n        'Suppression rule:\\n```xml\\n' +\n      \
          \  '<suppress base=\"true\">\\n' +\n        '   <notes><![CDATA[\\n' +\n\
          \        '   FP per issue #' + context.issue.number + '\\n' +\n        '\
          \   ]]></notes>\\n' +\n        '   <packageUrl regex=\"true\">' + purl +\
          \ '</packageUrl>\\n' +\n        '   <cpe>' + matchcpe + '</cpe>\\n' +\n\
          \        '</suppress>\\n```\\n\\n' +\n        'Link to test results: ' +\
          \ context.serverUrl + '/' + context.repo.owner + '/' + context.repo.repo\
          \ + '/actions/runs/' + context.runId\n})\ngithub.rest.issues.addLabels({\n\
          \  issue_number: context.issue.number,\n  owner: context.repo.owner,\n \
          \ repo: context.repo.repo,\n  labels: ['npm']\n})\n"
    - continue-on-error: true
      env:
        CPE: ${{ fromJSON(steps.issue-parser.outputs.jsonString).cpe }}
        NAME: ${{ fromJSON(steps.purl-parser.outputs.result).name }}
        TYPE: ${{ fromJSON(steps.purl-parser.outputs.result).type }}
        VERSION: ${{ fromJSON(steps.purl-parser.outputs.result).version }}
      if: ${{ fromJSON(steps.purl-parser.outputs.result).type == 'nuget' }}
      name: Comment on dotnet issue
      uses: actions/github-script@v7.0.1
      with:
        script: "var name = process.env.NAME;\nvar packageType = process.env.TYPE;\n\
          var purl = '^pkg:' + packageType;\nif(name !== null && name !== '') {\n\
          \    purl += '/' + name.replaceAll('.','\\\\.');\n}\npurl += '@.*$';\nvar\
          \ cpe = process.env.CPE.trim().replaceAll(/^`|`$/g,'').split(':');\nvar\
          \ matchCpe;\nif (cpe[1] == '2.3') {\n   matchcpe = 'cpe:/a:' + cpe[3] +\
          \ ':' + cpe[4];\n} else {\n   matchcpe = 'cpe:/a:' + cpe[2] + ':' + cpe[3];\n\
          }\n\nawait github.rest.issues.createComment({\n  issue_number: context.issue.number,\n\
          \  owner: context.repo.owner,\n  repo: context.repo.repo,\n  body: 'Nuget\
          \ Coordinates\\n\\n```shell\\ndotnet add package ' + process.env.NAME +\
          \ ' --version ' + process.env.VERSION + '\\n```\\n\\n' +\n        'Suppression\
          \ rule:\\n```xml\\n' +\n        '<suppress base=\"true\">\\n' +\n      \
          \  '   <notes><![CDATA[\\n' +\n        '   FP per issue #' + context.issue.number\
          \ + '\\n' +\n        '   ]]></notes>\\n' +\n        '   <packageUrl regex=\"\
          true\">' + purl + '</packageUrl>\\n' +\n        '   <cpe>' + matchcpe +\
          \ '</cpe>\\n' +\n        '</suppress>\\n```\\n\\n' +\n        'Link to test\
          \ results: ' + context.serverUrl + '/' + context.repo.owner + '/' + context.repo.repo\
          \ + '/actions/runs/' + context.runId\n})\ngithub.rest.issues.addLabels({\n\
          \  issue_number: context.issue.number,\n  owner: context.repo.owner,\n \
          \ repo: context.repo.repo,\n  labels: ['dotnet']\n})\n"
    - continue-on-error: true
      if: ${{ failure() }}
      name: Message failure
      uses: actions/github-script@v7.0.1
      with:
        script: "github.rest.issues.createComment({\n  issue_number: context.issue.number,\n\
          \  owner: context.repo.owner,\n  repo: context.repo.repo,\n  body: 'Failed\
          \ to automatically evaluate the false positive. ' +\n        'See: ' + context.serverUrl\
          \ + '/' + context.repo.owner + '/' + context.repo.repo + '/actions/runs/'\
          \ + context.runId,\n});\n"
name: False Positive Ops
on:
  repository_dispatch:
    types: trigger-ga___false-positive-ops.yml
permissions:
  contents: read
  issues: write
