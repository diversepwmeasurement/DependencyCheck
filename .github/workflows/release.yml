jobs:
  build:
    name: Build dependency-check
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      id: install-gpg-key
      name: Install gpg secret key
      run: 'cat <(echo -e "${{ secrets.OSSRH_GPG_SECRET_KEY }}") | gpg --batch --import

        gpg --list-secret-keys --keyid-format LONG

        '
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      id: maven-cache
      name: Check Maven Cache
      uses: actions/cache@v4
      with:
        key: mvn-repo
        path: ~/.m2/repository/
    - continue-on-error: true
      id: maven-it-cache
      name: Check Local Maven Cache
      uses: actions/cache@v4
      with:
        key: mvn-it-repo
        path: maven/target/local-repo
    - continue-on-error: true
      id: odc-data-cache
      name: Check ODC Data Cache
      uses: actions/cache@v4
      with:
        key: odc-data
        path: core/target/data
    - continue-on-error: true
      uses: actions/setup-dotnet@v4.0.0
      with:
        dotnet-version: 6.0.x
    - continue-on-error: true
      id: jdk-8
      name: Set up JDK 1.8
      uses: actions/setup-java@v4
      with:
        distribution: zulu
        java-version: 8
        server-id: ossrh
        server-password: ${{ secrets.OSSRH_TOKEN }}
        server-username: ${{ secrets.OSSRH_USERNAME }}
    - continue-on-error: true
      uses: pnpm/action-setup@fe02b34f77f8bc703788d5817da081398fad5dd2
      with:
        version: 6.0.2
    - continue-on-error: true
      name: Configure Git user
      run: 'git config user.email "actions@github.com"

        git config user.name "GitHub Actions"

        '
    - continue-on-error: true
      name: Get version
      run: 'VERSION=$( mvn help:evaluate -Dexpression=project.version -q -DforceStdout
        )

        echo "VERSION=$VERSION"

        '
    - continue-on-error: true
      env:
        MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
        MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
        NVD_API_KEY: ${{ secrets.NVD_API_KEY }}
      id: build-release
      name: Build Release with Maven
      run: 'mvn -V -s settings.xml -Prelease "-DnexusUrl=https://oss.sonatype.org/"
        clean package source:jar javadoc:jar gpg:sign deploy site site:stage -DreleaseTesting
        --no-transfer-progress --batch-mode -Dgpg.passphrase=${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD
        }}

        '
      timeout-minutes: 120
    - continue-on-error: true
      id: archive-coverage
      name: Archive code coverage results
      uses: actions/upload-artifact@v4
      with:
        name: code-coverage-report
        path: '**/target/jacoco-results/jacoco.xml

          **/target/jacoco-results/**/*.html

          '
        retention-days: 7
    - continue-on-error: true
      id: archive-release
      name: Archive Release
      uses: actions/upload-artifact@v4
      with:
        name: archive-release
        path: '**/target/*.asc

          **/target/*.jar

          **/target/*.pom

          ant/target/*.zip

          cli/target/*.zip

          target/*.buildinfo

          '
        retention-days: 7
    - continue-on-error: true
      id: archive-site
      name: Archive Site
      uses: actions/upload-artifact@v4
      with:
        name: archive-site
        path: target/staging/
        retention-days: 7
  docker:
    env:
      DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
    name: Publish Docker
    needs: build
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      id: maven-cache
      name: Check Maven Cache
      uses: actions/cache@v4
      with:
        key: mvn-repo
        path: ~/.m2/repository/
    - continue-on-error: true
      id: docker-odc-cache
      name: Check Docker ODC Cache
      uses: actions/cache@v4
      with:
        key: docker-repo
        path: ~/OWASP-Dependency-Check
    - continue-on-error: true
      name: Checkout code
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Download release build
      uses: actions/download-artifact@v4
      with:
        name: archive-release
    - continue-on-error: true
      name: Build Docker Image
      run: ./build-docker.sh
    - continue-on-error: true
      name: build scan target
      run: mvn -s settings.xml package -DskipTests=true --no-transfer-progress --batch-mode
    - continue-on-error: true
      name: Test Docker Image
      run: ./test-docker.sh
    - continue-on-error: true
      name: Deploy Docker Image
      run: 'echo $DOCKER_TOKEN | docker login -u $DOCKER_USERNAME --password-stdin
        2>/dev/null

        ./publish-docker.sh

        '
  publish:
    name: Publish gh-pages
    needs: build
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout code
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Download Site
      uses: actions/download-artifact@v4
      with:
        name: archive-site
        path: target/staging
    - continue-on-error: true
      name: Display structure of downloaded files
      run: ls -R
      working-directory: target
    - continue-on-error: true
      name: Deploy gh-pages
      uses: JamesIves/github-pages-deploy-action@v4.6.1
      with:
        branch: gh-pages
        clean: false
        folder: target/staging
  publish_coverage:
    name: publish code coverage reports
    needs: build
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Download coverage reports
      uses: actions/download-artifact@v4
      with:
        name: code-coverage-report
    - continue-on-error: true
      name: Run codacy-coverage-reporter
      uses: codacy/codacy-coverage-reporter-action@master
      with:
        coverage-reports: utils/target/jacoco-results/jacoco.xml,core/target/jacoco-results/jacoco.xml,maven/target/jacoco-results/jacoco.xml,ant/target/jacoco-results/jacoco.xml,cli/target/jacoco-results/jacoco.xml
        project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
  release:
    name: Publish Release
    needs: build
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout code
      uses: actions/checkout@v4
    - continue-on-error: true
      id: get-version
      name: Get version
      run: 'VERSION=$( mvn help:evaluate -Dexpression=project.version -q -DforceStdout
        )

        echo "VERSION=$VERSION" >> $GITHUB_ENV

        '
    - continue-on-error: true
      name: Download release build
      uses: actions/download-artifact@v4
      with:
        name: archive-release
    - continue-on-error: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      id: create_release
      name: Create Release
      uses: actions/create-release@v1.1.4
      with:
        body: 'Refer to the [CHANGELOG.md](https://github.com/jeremylong/DependencyCheck/blob/main/CHANGELOG.md#change-log)
          for information about improvements and upgrade notes.

          '
        draft: false
        prerelease: false
        release_name: Version ${{ env.VERSION }}
        tag_name: v${{ env.VERSION }}
    - continue-on-error: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      id: upload-release-cli
      name: Upload CLI
      uses: actions/upload-release-asset@v1.0.2
      with:
        asset_content_type: application/zip
        asset_name: dependency-check-${{env.VERSION}}-release.zip
        asset_path: cli/target/dependency-check-${{env.VERSION}}-release.zip
        upload_url: ${{ steps.create_release.outputs.upload_url }}
    - continue-on-error: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      id: upload-release-cli-sig
      name: Upload CLI signature
      uses: actions/upload-release-asset@v1.0.2
      with:
        asset_content_type: text/plain
        asset_name: dependency-check-${{env.VERSION}}-release.zip.asc
        asset_path: cli/target/dependency-check-${{env.VERSION}}-release.zip.asc
        upload_url: ${{ steps.create_release.outputs.upload_url }}
    - continue-on-error: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      id: upload-release-ant
      name: Upload ANT
      uses: actions/upload-release-asset@v1.0.2
      with:
        asset_content_type: application/zip
        asset_name: dependency-check-ant-${{env.VERSION}}-release.zip
        asset_path: ant/target/dependency-check-ant-${{env.VERSION}}-release.zip
        upload_url: ${{ steps.create_release.outputs.upload_url }}
    - continue-on-error: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      id: upload-release-ant-sig
      name: Upload ANT signature
      uses: actions/upload-release-asset@v1.0.2
      with:
        asset_content_type: text/plain
        asset_name: dependency-check-ant-${{env.VERSION}}-release.zip.asc
        asset_path: ant/target/dependency-check-ant-${{env.VERSION}}-release.zip.asc
        upload_url: ${{ steps.create_release.outputs.upload_url }}
    - continue-on-error: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      id: upload-release-buildinfo
      name: Upload buildinfo
      uses: actions/upload-release-asset@v1.0.2
      with:
        asset_content_type: text/plain
        asset_name: dependency-check-parent-${{env.VERSION}}.buildinfo
        asset_path: target/dependency-check-parent-${{env.VERSION}}.buildinfo
        upload_url: ${{ steps.create_release.outputs.upload_url }}
name: Build and Deploy Release
on:
  repository_dispatch:
    types: trigger-ga___release.yml
permissions:
  contents: write
