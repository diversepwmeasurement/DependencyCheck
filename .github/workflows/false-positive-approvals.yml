jobs:
  update_suppression:
    if: ${{ !github.event.issue.pull_request && contains(github.event.issue.labels.*.name,
      'FP Report') && contains(github.event.comment.body,'approved') && (github.event.comment.user.login
      == 'jeremylong' || github.event.comment.user.login == 'aikebah' || github.event.comment.user.login
      == 'nhumblot')  }}
    name: Update Suppression Rules
    permissions:
      contents: write
      issues: write
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
      with:
        ref: generatedSuppressions
    - continue-on-error: true
      uses: actions/setup-node@v4.0.2
    - continue-on-error: true
      run: 'npm install fast-xml-parser@4.0.9

        npm install fs

        '
    - continue-on-error: true
      id: fp-ops-commit
      name: Commit Suppression Rule
      uses: actions/github-script@v7.0.1
      with:
        script: "const { execSync } = require(\"child_process\");\nconst { XMLParser\
          \ } = require(\"fast-xml-parser\");\nconst fs = require('fs');\nconsole.log('evaluating\
          \ issue #' + context.issue.number);\n\nconst { data: comments } = await\
          \ github.rest.issues.listComments({\n  issue_number: context.issue.number,\n\
          \  owner: context.issue.owner,\n  repo: context.issue.repo,\n})\nconsole.log('author0:\
          \ ' + comments[0].user.login);\nconsole.log('comments0: ' + comments[0].body);\n\
          let botComments = comments.filter(comment => \n  comment.user.login ===\
          \ 'github-actions[bot]' && \n  comment.body.includes('<suppress base=\"\
          true\">') &&\n  comment.body.includes('Suppression rule:')\n)\nconsole.log('bot\
          \ comments: ' + botComments);\nif (botComments.length<=0) {\n  console.log('Suppression\
          \ rule from github-actions not found');\n  core.setOutput('publish', 'false');\n\
          \  //using core.setFailed() ended execution and the check for failure below\
          \ (to post a message did not work)\n  core.setOutput('failed', 'true');\n\
          \  return;\n} \nlet lastComment = botComments[botComments.length-1];\nlet\
          \ data = lastComment.body.split('```');\nlet suppression = data[data.length-2].substring(3).trim();\n\
          console.log(\"suppression rule: \" + suppression);\nconst options = {\n\
          \    ignoreAttributes : true\n};\nconst parser = new XMLParser(options);\n\
          let proposedRule = parser.parse(suppression);\n\nlet commitComment = proposedRule.suppress.notes.trim();\n\
          commitComment = commitComment.replace(/[[\\]{}`'\";|\\/\\\\]/g, '');\nconsole.log(\"\
          commit comment: \" + commitComment);\n\n//validate we haven't already suppressed\
          \ this one.\nconst generatedSuppressions = fs.readFileSync('generatedSuppressions.xml',\
          \ 'utf8');\n\nlet found = false;\nlet previousReportNotes = '';\nif (!(generatedSuppressions\
          \ && generatedSuppressions.trim() === '')) {\n  let rules = parser.parse(generatedSuppressions);\n\
          \  for (r of rules.suppress) {\n    if (proposedRule.suppress.packageUrl\
          \ === r.packageUrl &&\n      proposedRule.suppress.cpe === r.cpe) {\n  \
          \    found = true;\n      previousReportNotes = r.notes.trim();\n      break;\n\
          \    }\n  }\n}\nif (found) {\n  let prevIssue = previousReportNotes.split('#')[1].trim();\n\
          \  github.rest.issues.createComment({\n    issue_number: context.issue.number,\n\
          \    owner: context.repo.owner,\n    repo: context.repo.repo,\n    body:\
          \ 'Suppress already exists in `generatedSuppressions` branch. See issue\
          \ #' + prevIssue + '.',\n  }); \n  github.rest.issues.addLabels({\n    issue_number:\
          \ context.issue.number,\n    owner: context.repo.owner,\n    repo: context.repo.repo,\n\
          \    labels: ['duplicate']\n  });\n  github.rest.issues.update({\n    issue_number:\
          \ context.issue.number,\n    owner: context.repo.owner,\n    repo: context.repo.repo,\n\
          \    state: 'closed',\n  });\n  core.setOutput('publish', 'false');\n} else\
          \ {\n  fs.appendFileSync('generatedSuppressions.xml', '\\n' + suppression.trim(),\
          \ function (err) {\n    if (err) throw err;\n    console.log('Suppression\
          \ rule added');\n  });\n  if (!fs.existsSync('./suppressions')){\n     \
          \ fs.mkdirSync('./suppressions');\n  }\n  fs.appendFileSync('suppressions/publishedSuppressions.xml',\
          \ '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<suppressions xmlns=\"https://jeremylong.github.io/DependencyCheck/dependency-suppression.1.3.xsd\"\
          >' + generatedSuppressions + '\\n' + suppression.trim() + '\\n</suppressions>',\
          \ function (err) {\n    if (err) throw err;\n    console.log('publishedSuppressions.xml\
          \ created');\n  });\n\n  fs.appendFileSync('.git/config', `\n  [user]\n\
          \    name = github-actions[bot]\n    email = 41898282+github-actions[bot]@users.noreply.github.com\n\
          \  `, err => {\n    if (err) throw err;\n  });\n\n  execSync('git commit\
          \ -m \"fix(fp): ' + commitComment + '\" generatedSuppressions.xml;git push\
          \ origin generatedSuppressions', (err, stdout, stderr) => {\n    if (err)\
          \ throw err;\n    console.log('committed suppression rule');\n  });\n  \n\
          \  github.rest.issues.createComment({\n    issue_number: context.issue.number,\n\
          \    owner: context.repo.owner,\n    repo: context.repo.repo,\n    body:\
          \ 'Suppress rule has been added to the `generatedSuppressions` branch.',\n\
          \  }); \n  github.rest.issues.update({\n    issue_number: context.issue.number,\n\
          \    owner: context.repo.owner,\n    repo: context.repo.repo,\n    state:\
          \ 'closed',\n  });\n  core.setOutput('publish', 'true');\n} \n"
    - continue-on-error: true
      if: ${{ steps.fp-ops-commit.outputs.publish == 'true' }}
      name: Publish Updated Suppressions
      uses: JamesIves/github-pages-deploy-action@v4.6.1
      with:
        branch: gh-pages
        folder: suppressions
        target-folder: suppressions
    - continue-on-error: true
      if: ${{ failure() || steps.fp-ops-commit.outputs.failed }}
      name: Message failure
      uses: actions/github-script@v7.0.1
      with:
        script: "github.rest.issues.createComment({\n  issue_number: context.issue.number,\n\
          \  owner: context.repo.owner,\n  repo: context.repo.repo,\n  body: 'Failed\
          \ to automatically generate and publish the suppression rule!\\n\\n' + 'Link\
          \ to action run: ' + context.serverUrl + '/' + context.repo.owner + '/'\
          \ + context.repo.repo + '/actions/runs/' + context.runId,\n});\n"
name: False Positive Approvals
on:
  repository_dispatch:
    types: trigger-ga___false-positive-approvals.yml
permissions: {}
