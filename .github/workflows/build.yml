jobs:
  build:
    name: Build dependency-check
    permissions:
      contents: read
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      id: install-gpg-key
      name: Install gpg secret key
      run: 'cat <(echo -e "${{ secrets.OSSRH_GPG_SECRET_KEY }}") | gpg --batch --import

        gpg --list-secret-keys --keyid-format LONG

        '
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      id: maven-cache
      name: Check Maven Cache
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        path: ~/.m2/repository
        restore-keys: '${{ runner.os }}-maven-

          '
    - continue-on-error: true
      id: maven-it-cache
      name: Check Local Maven Cache
      uses: actions/cache@v4
      with:
        key: mvn-it-repo
        path: maven/target/local-repo
    - continue-on-error: true
      id: odc-data-cache
      name: Check ODC Data Cache
      uses: actions/cache@v4
      with:
        key: odc-data
        path: core/target/data
    - continue-on-error: true
      uses: actions/setup-dotnet@v4.0.0
      with:
        dotnet-version: 6.0.x
    - continue-on-error: true
      id: jdk-8
      name: Set up JDK 1.8
      uses: actions/setup-java@v4
      with:
        distribution: zulu
        java-version: 8
        server-id: ossrh
        server-password: ${{ secrets.OSSRH_TOKEN }}
        server-username: ${{ secrets.OSSRH_USERNAME }}
    - continue-on-error: true
      uses: pnpm/action-setup@fe02b34f77f8bc703788d5817da081398fad5dd2
      with:
        version: 6.0.2
    - continue-on-error: true
      env:
        MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
        MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
        NVD_API_KEY: ${{ secrets.NVD_API_KEY }}
      id: build-snapshot
      name: Build Snapshot with Maven
      run: mvn -V -s settings.xml -Prelease clean package verify source:jar javadoc:jar
        gpg:sign deploy -DreleaseTesting --no-transfer-progress --batch-mode -Dgpg.passphrase=${{
        secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }}
    - continue-on-error: true
      name: SARIF Multitool
      uses: microsoft/sarif-actions@v0.1
      with:
        command: validate core/target/test-reports/Report.sarif
    - continue-on-error: true
      id: archive-logs
      if: always()
      name: Archive IT test logs
      uses: actions/upload-artifact@v4
      with:
        name: it-test-logs
        path: maven/target/it/**/build.log
        retention-days: 7
    - continue-on-error: true
      id: archive-coverage
      name: Archive code coverage results
      uses: actions/upload-artifact@v4
      with:
        name: code-coverage-report
        path: '**/target/jacoco-results/jacoco.xml

          **/target/jacoco-results/**/*.html

          '
        retention-days: 7
    - continue-on-error: true
      id: archive-snapshot
      name: Archive Snapshot
      uses: actions/upload-artifact@v4
      with:
        name: archive-snapshot
        path: '**/target/*.asc

          **/target/*.jar

          **/target/*.pom

          ant/target/*.zip

          cli/target/*.zip

          '
        retention-days: 7
  docker:
    env:
      DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
    name: Build and Test Docker
    needs: build
    permissions:
      contents: read
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout code
      uses: actions/checkout@v4
    - continue-on-error: true
      id: maven-cache
      name: Check Maven Cache
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        path: ~/.m2/repository
        restore-keys: '${{ runner.os }}-maven-

          '
    - continue-on-error: true
      name: Download release build
      uses: actions/download-artifact@v4
      with:
        name: archive-snapshot
    - continue-on-error: true
      name: Build Docker Image
      run: ./build-docker.sh
    - continue-on-error: true
      name: build scan target
      run: mvn -V -s settings.xml package -DskipTests=true --no-transfer-progress
        --batch-mode
    - continue-on-error: true
      name: Test Docker Image
      run: ./test-docker.sh
  publish_coverage:
    name: publish code coverage reports
    needs: build
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Download coverage reports
      uses: actions/download-artifact@v4
      with:
        name: code-coverage-report
    - continue-on-error: true
      name: Run codacy-coverage-reporter
      uses: codacy/codacy-coverage-reporter-action@master
      with:
        coverage-reports: utils/target/jacoco-results/jacoco.xml,core/target/jacoco-results/jacoco.xml,maven/target/jacoco-results/jacoco.xml,ant/target/jacoco-results/jacoco.xml,cli/target/jacoco-results/jacoco.xml
        project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
name: Build and Deploy Snapshot
on:
  repository_dispatch:
    types: trigger-ga___build.yml
permissions: {}
